name: Production Release

on:
  push:
    branches:
      - main
    paths:
      - "specs.json"

env:
  BUILD_LINUX: "linux-amd64"
  BUILD_DARWIN: "darwin-amd64"

jobs:
  verify:
    runs-on: ubuntu-latest
    if: ${{ github.event.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run workspace setup
        uses: ./.github/actions/setup-workspace

      - name: Run tests
        run: |
          just test

  release:
    runs-on: ubuntu-latest
    if: ${{ github.event.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
    needs: verify
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run setup
        uses: ./.github/actions/setup-workspace

      - name: Set version
        id: set-version
        run: |
          VERSION=$(jq -r .version specs.json)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Install Github CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh

      - name: Build binary
        id: build-binary
        run: |
          go mod tidy
          go mod download all
          mkdir -p \
            build/${{ env.BUILD_LINUX }} \
            build/${{ env.BUILD_DARWIN }}
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build \
            -ldflags="-X main.version=${VERSION}" \
            -o ./build/${{ env.BUILD_LINUX }}/muxingbird .
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build \
            -ldflags="-X main.version=${VERSION}" \
            -o ./build/${{ env.BUILD_DARWIN }}/muxingbird .
          echo "Created binary builds!"

      - name: Create archive
        run: |
          mkdir -p release
          tar -czvf release/muxingbird-${{ env.VERSION }}-${{ env.BUILD_LINUX }}.tar.gz -C ./build/${{ env.BUILD_LINUX }} muxingbird
          tar -czvf release/muxingbird-${{ env.VERSION }}-${{ env.BUILD_DARWIN }}.tar.gz -C ./build/${{ env.BUILD_DARWIN }} muxingbird

      - name: Create Github release
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.USER_GITHUB_TOKEN }}
          VERSION: ${{ env.VERSION }}
        run: |
          gh release create "${{ env.VERSION }}" \
            release/muxingbird-${{ env.VERSION }}-${{ env.BUILD_LINUX }}.tar.gz \
            release/muxingbird-${{ env.VERSION }}-${{ env.BUILD_DARWIN }}.tar.gz \
            --notes-file ".github/releases/${{ env.VERSION }}.md"

      - name: Create release job summary
        if: success()
        run: |
          cat .github/releases/${{ env.VERSION }}.md >> $GITHUB_STEP_SUMMARY
